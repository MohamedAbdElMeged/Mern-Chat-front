{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/train/react/chat-wo2/src/index.js\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import Demo from './Demo'\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Demo />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Launcher } from '../../src';\nimport messageHistory from './messageHistory';\nimport TestArea from './TestArea';\nimport Header from './Header';\nimport Footer from './Footer';\nimport monsterImgUrl from './../assets/monster.png';\nimport './../assets/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Demo extends Component {\n  constructor() {\n    super();\n    this.state = {\n      messageList: messageHistory,\n      newMessagesCount: 0,\n      isOpen: false\n    };\n  }\n\n  _onMessageWasSent(message) {\n    this.setState({\n      messageList: [...this.state.messageList, message]\n    });\n  }\n\n  _onFilesSelected(fileList) {\n    const objectURL = window.URL.createObjectURL(fileList[0]);\n    this.setState({\n      messageList: [...this.state.messageList, {\n        type: 'file',\n        author: 'me',\n        data: {\n          url: objectURL,\n          fileName: fileList[0].name\n        }\n      }]\n    });\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      const newMessagesCount = this.state.isOpen ? this.state.newMessagesCount : this.state.newMessagesCount + 1;\n      this.setState({\n        newMessagesCount: newMessagesCount,\n        messageList: [...this.state.messageList, {\n          author: 'them',\n          type: 'text',\n          data: {\n            text\n          }\n        }]\n      });\n    }\n  }\n\n  _handleClick() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      newMessagesCount: 0\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TestArea, {\n        onMessage: this._sendMessage.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Launcher, {\n        agentProfile: {\n          teamName: 'react-chat-window',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        },\n        onMessageWasSent: this._onMessageWasSent.bind(this),\n        onFilesSelected: this._onFilesSelected.bind(this),\n        messageList: this.state.messageList,\n        newMessagesCount: this.state.newMessagesCount,\n        handleClick: this._handleClick.bind(this),\n        isOpen: this.state.isOpen,\n        showEmoji: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"demo-monster-img\",\n        src: monsterImgUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nrender( /*#__PURE__*/_jsxDEV(Demo, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 107,\n  columnNumber: 8\n}, this), document.querySelector('#demo'));","map":{"version":3,"sources":["/home/mohamed/Desktop/train/react/chat-wo2/src/index.js"],"names":["React","Component","render","Launcher","messageHistory","TestArea","Header","Footer","monsterImgUrl","Demo","constructor","state","messageList","newMessagesCount","isOpen","_onMessageWasSent","message","setState","_onFilesSelected","fileList","objectURL","window","URL","createObjectURL","type","author","data","url","fileName","name","_sendMessage","text","length","_handleClick","bind","teamName","imageUrl","document","querySelector"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import Demo from './Demo'\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <Demo />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n\n\nimport React, {Component} from 'react';\nimport {render} from 'react-dom';\nimport {Launcher} from '../../src';\nimport messageHistory from './messageHistory';\nimport TestArea from './TestArea';\nimport Header from './Header';\nimport Footer from './Footer';\nimport monsterImgUrl from './../assets/monster.png';\nimport './../assets/styles';\n\n\n\nclass Demo extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      messageList: messageHistory,\n      newMessagesCount: 0,\n      isOpen: false\n    };\n  }\n\n  _onMessageWasSent(message) {\n    this.setState({\n      messageList: [...this.state.messageList, message]\n    });\n  }\n\n  _onFilesSelected(fileList) {\n    const objectURL = window.URL.createObjectURL(fileList[0]);\n    this.setState({\n      messageList: [...this.state.messageList, {\n        type: 'file', author: 'me',\n        data: {\n          url: objectURL,\n          fileName: fileList[0].name\n        }\n      }]\n    });\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      const newMessagesCount = this.state.isOpen ? this.state.newMessagesCount : this.state.newMessagesCount + 1;\n      this.setState({\n        newMessagesCount: newMessagesCount,\n        messageList: [...this.state.messageList, {\n          author: 'them',\n          type: 'text',\n          data: { text }\n        }]\n      });\n    }\n  }\n\n  _handleClick() {\n    this.setState({\n      isOpen: !this.state.isOpen,\n      newMessagesCount: 0\n    });\n  }\n\n  render() {\n    return <div>\n      <Header />\n      <TestArea\n        onMessage={this._sendMessage.bind(this)}\n      />\n      <Launcher\n        agentProfile={{\n          teamName: 'react-chat-window',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        }}\n        onMessageWasSent={this._onMessageWasSent.bind(this)}\n        onFilesSelected={this._onFilesSelected.bind(this)}\n        messageList={this.state.messageList}\n        newMessagesCount={this.state.newMessagesCount}\n        handleClick={this._handleClick.bind(this)}\n        isOpen={this.state.isOpen}\n        showEmoji\n      />\n      <img className=\"demo-monster-img\" src={monsterImgUrl} />\n    </div>;\n  }\n}\n\nrender(<Demo/>, document.querySelector('#demo'));\n"]},"metadata":{},"sourceType":"module"}