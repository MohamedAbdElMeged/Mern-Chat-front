{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/Desktop/train/react/Chat-Mern/chat-wo2/src/Demo.js\";\nimport React, { Component } from 'react';\nimport { Launcher } from 'react-chat-window';\nimport { io } from 'socket.io-client';\nimport SocketIOFileUpload from 'socketio-file-upload';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Demo extends Component {\n  componentDidMount() {\n    this.setState({\n      enteredid: prompt('Please enter your id')\n    });\n    this.setState({\n      enteredtok: prompt('Please enter your token')\n    });\n    const socket = io(\"http://localhost:5000\", {\n      withCredentials: true,\n      extraHeaders: {\n        \"my-custom-header\": \"abcd\"\n      }\n    });\n    socket.on(\"chatnew\", args => {\n      if (args.token !== this.state.enteredtok && args.chatId === this.state.enteredid) {\n        if (args.messageType === \"file\") {\n          this.setState({\n            messageList: [...this.state.messageList, {\n              author: 'them',\n              type: 'file',\n              data: {\n                url: args.message,\n                fileName: args.filename\n              }\n            }]\n          });\n        } else {\n          this.setState({\n            messageList: [...this.state.messageList, {\n              author: 'them',\n              type: 'text',\n              data: {\n                text: args.message\n              }\n            }]\n          });\n        }\n      }\n    });\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      messageList: []\n    };\n  }\n\n  _onMessageWasSent(message) {\n    const socket = io(\"http://localhost:5000\", {\n      withCredentials: true,\n      extraHeaders: {\n        \"my-custom-header\": \"abcd\"\n      }\n    });\n    let messageObject = {\n      token: this.state.enteredtok,\n      chatId: this.state.enteredid,\n      message: message.data.text,\n      messageType: 'text'\n    };\n    socket.emit(\"chatnew\", messageObject);\n    this.setState({\n      messageList: [...this.state.messageList, message]\n    });\n  }\n\n  _onFilesSelected(fileList) {\n    const objectURL = window.URL.createObjectURL(fileList[0]);\n    const socket = io(\"http://localhost:5000\", {\n      withCredentials: true,\n      extraHeaders: {\n        \"my-custom-header\": \"abcd\"\n      }\n    });\n    var uploader = new SocketIOFileUpload(socket);\n    let messageObject = {\n      token: this.state.enteredtok,\n      chatId: this.state.enteredid,\n      message: fileList[0],\n      messageType: 'file',\n      filename: fileList[0].name\n    };\n    uploader.listenOnInput(document.getElementsByName(\"files[]\")[0]);\n    socket.emit(\"chatnew\", messageObject);\n    this.setState({\n      messageList: [...this.state.messageList, {\n        type: 'file',\n        author: 'me',\n        data: {\n          url: objectURL,\n          fileName: fileList[0].name\n        }\n      }]\n    });\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n      this.setState({\n        messageList: [...this.state.messageList, {\n          author: this.state.enteredtok,\n          type: 'text',\n          data: text\n        }]\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Launcher, {\n        agentProfile: {\n          teamName: 'react-chat-window',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        },\n        onMessageWasSent: this._onMessageWasSent.bind(this),\n        onFilesSelected: this._onFilesSelected.bind(this),\n        messageList: this.state.messageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["/home/mohamed/Desktop/train/react/Chat-Mern/chat-wo2/src/Demo.js"],"names":["React","Component","Launcher","io","SocketIOFileUpload","Demo","componentDidMount","setState","enteredid","prompt","enteredtok","socket","withCredentials","extraHeaders","on","args","token","state","chatId","messageType","messageList","author","type","data","url","message","fileName","filename","text","constructor","_onMessageWasSent","messageObject","emit","_onFilesSelected","fileList","objectURL","window","URL","createObjectURL","uploader","name","listenOnInput","document","getElementsByName","_sendMessage","length","render","teamName","imageUrl","bind"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,QAAuB,mBAAvB;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;AACA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,iBAAiB,GAAE;AAEf,SAAKC,QAAL,CAAc;AACVC,MAAAA,SAAS,EAAEC,MAAM,CAAC,sBAAD;AADP,KAAd;AAGA,SAAKF,QAAL,CAAc;AAACG,MAAAA,UAAU,EAAED,MAAM,CAAC,yBAAD;AAAnB,KAAd;AAEA,UAAME,MAAM,GAAGR,EAAE,CAAC,uBAAD,EAA0B;AACvCS,MAAAA,eAAe,EAAE,IADsB;AAEvCC,MAAAA,YAAY,EAAE;AACZ,4BAAoB;AADR;AAFyB,KAA1B,CAAjB;AAOEF,IAAAA,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBC,IAAD,IAAS;AAC3B,UAAGA,IAAI,CAACC,KAAL,KAAe,KAAKC,KAAL,CAAWP,UAA1B,IAAwCK,IAAI,CAACG,MAAL,KAAgB,KAAKD,KAAL,CAAWT,SAAtE,EAAgF;AAC/E,YAAIO,IAAI,CAACI,WAAL,KAAqB,MAAzB,EACA;AACG,eAAKZ,QAAL,CAAc;AACVa,YAAAA,WAAW,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,WAAf,EAA4B;AACzCC,cAAAA,MAAM,EAAE,MADiC;AAEzCC,cAAAA,IAAI,EAAE,MAFmC;AAGvCC,cAAAA,IAAI,EAAE;AACJC,gBAAAA,GAAG,EAAET,IAAI,CAACU,OADN;AAEJC,gBAAAA,QAAQ,EAAEX,IAAI,CAACY;AAFX;AAHiC,aAA5B;AADH,WAAd;AAWF,SAbD,MAaQ;AAEL,eAAKpB,QAAL,CAAc;AACVa,YAAAA,WAAW,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,WAAf,EAA4B;AACzCC,cAAAA,MAAM,EAAE,MADiC;AAEzCC,cAAAA,IAAI,EAAE,MAFmC;AAGzCC,cAAAA,IAAI,EAAE;AACFK,gBAAAA,IAAI,EAAEb,IAAI,CAACU;AADT;AAHmC,aAA5B;AADH,WAAd;AAWF;AACD;AAGR,KAhCK;AAgCF;;AAENI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKZ,KAAL,GAAa;AACXG,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEDU,EAAAA,iBAAiB,CAACL,OAAD,EAAU;AACzB,UAAMd,MAAM,GAAGR,EAAE,CAAC,uBAAD,EAA0B;AACvCS,MAAAA,eAAe,EAAE,IADsB;AAEvCC,MAAAA,YAAY,EAAE;AACZ,4BAAoB;AADR;AAFyB,KAA1B,CAAjB;AAMA,QAAIkB,aAAa,GAAG;AAChBf,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWP,UADF;AAEhBQ,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWT,SAFH;AAGhBiB,MAAAA,OAAO,EAACA,OAAO,CAACF,IAAR,CAAaK,IAHL;AAIhBT,MAAAA,WAAW,EAAC;AAJI,KAApB;AASAR,IAAAA,MAAM,CAACqB,IAAP,CAAY,SAAZ,EAAsBD,aAAtB;AAGA,SAAKxB,QAAL,CAAc;AACVa,MAAAA,WAAW,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,WAAf,EAA4BK,OAA5B;AADH,KAAd;AAED;;AAEDQ,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACzB,UAAMC,SAAS,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BJ,QAAQ,CAAC,CAAD,CAAnC,CAAlB;AACA,UAAMvB,MAAM,GAAGR,EAAE,CAAC,uBAAD,EAA0B;AACvCS,MAAAA,eAAe,EAAE,IADsB;AAEvCC,MAAAA,YAAY,EAAE;AACZ,4BAAoB;AADR;AAFyB,KAA1B,CAAjB;AAOE,QAAI0B,QAAQ,GAAG,IAAInC,kBAAJ,CAAuBO,MAAvB,CAAf;AACA,QAAIoB,aAAa,GAAG;AAChBf,MAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWP,UADF;AAEhBQ,MAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWT,SAFH;AAGhBiB,MAAAA,OAAO,EAACS,QAAQ,CAAC,CAAD,CAHA;AAIhBf,MAAAA,WAAW,EAAC,MAJI;AAKhBQ,MAAAA,QAAQ,EAAEO,QAAQ,CAAC,CAAD,CAAR,CAAYM;AALN,KAApB;AAQAD,IAAAA,QAAQ,CAACE,aAAT,CAAuBC,QAAQ,CAACC,iBAAT,CAA2B,SAA3B,EAAsC,CAAtC,CAAvB;AAEAhC,IAAAA,MAAM,CAACqB,IAAP,CAAY,SAAZ,EAAsBD,aAAtB;AAEF,SAAKxB,QAAL,CAAc;AACZa,MAAAA,WAAW,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,WAAf,EAA4B;AACvCE,QAAAA,IAAI,EAAE,MADiC;AACzBD,QAAAA,MAAM,EAAE,IADiB;AAEvCE,QAAAA,IAAI,EAAE;AACJC,UAAAA,GAAG,EAAEW,SADD;AAEJT,UAAAA,QAAQ,EAAEQ,QAAQ,CAAC,CAAD,CAAR,CAAYM;AAFlB;AAFiC,OAA5B;AADD,KAAd;AASD;;AAEDI,EAAAA,YAAY,CAAChB,IAAD,EAAO;AACjB,QAAIA,IAAI,CAACiB,MAAL,GAAc,CAAlB,EAAqB;AAGnB,WAAKtC,QAAL,CAAc;AACZa,QAAAA,WAAW,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,WAAf,EAA4B;AACvCC,UAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWP,UADoB;AAEvCY,UAAAA,IAAI,EAAE,MAFiC;AAGvCC,UAAAA,IAAI,EAACK;AAHkC,SAA5B;AADD,OAAd;AAOD;AACF;;AAEDkB,EAAAA,MAAM,GAAG;AACP,wBAAQ;AAAA,6BACN,QAAC,QAAD;AACE,QAAA,YAAY,EAAE;AACZC,UAAAA,QAAQ,EAAE,mBADE;AAEZC,UAAAA,QAAQ,EAAE;AAFE,SADhB;AAKE,QAAA,gBAAgB,EAAE,KAAKlB,iBAAL,CAAuBmB,IAAvB,CAA4B,IAA5B,CALpB;AAME,QAAA,eAAe,EAAE,KAAKhB,gBAAL,CAAsBgB,IAAtB,CAA2B,IAA3B,CANnB;AAOE,QAAA,WAAW,EAAE,KAAKhC,KAAL,CAAWG;AAP1B;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAAR;AAWD;;AA1I0B;;AA4I7B,eAAef,IAAf","sourcesContent":["import React, {Component} from 'react'\nimport {Launcher} from 'react-chat-window'\nimport {io} from 'socket.io-client';\nimport SocketIOFileUpload from 'socketio-file-upload';\nclass Demo extends Component {\n    componentDidMount(){\n        \n        this.setState({\n            enteredid: prompt('Please enter your id')\n        })\n        this.setState({enteredtok: prompt('Please enter your token')})\n            \n        const socket = io(\"http://localhost:5000\", {\n            withCredentials: true,\n            extraHeaders: {\n              \"my-custom-header\": \"abcd\"\n            }\n          });\n\n          socket.on(\"chatnew\",(args)=> {\n            if(args.token !== this.state.enteredtok && args.chatId === this.state.enteredid){\n             if (args.messageType === \"file\")\n             {\n                this.setState({\n                    messageList: [...this.state.messageList, {\n                    author: 'them',\n                    type: 'file',\n                      data: {\n                        url: args.message,\n                        fileName: args.filename\n                      }\n                    }]\n    \n                   });\n             }   else{\n\n                this.setState({\n                    messageList: [...this.state.messageList, {\n                    author: 'them',\n                    type: 'text',\n                    data: {\n                        text: args.message\n                    } \n                      \n                    }]\n    \n                   });\n             }\n            }\n\n          \n    });}\n\n  constructor() {\n    super();\n    this.state = {\n      messageList: [],\n    };\n  }\n\n  _onMessageWasSent(message) {\n    const socket = io(\"http://localhost:5000\", {\n        withCredentials: true,\n        extraHeaders: {\n          \"my-custom-header\": \"abcd\"\n        }\n      });\n    let messageObject = {\n        token: this.state.enteredtok,\n        chatId: this.state.enteredid,\n        message:message.data.text,\n        messageType:'text'\n\n    }\n\n\n    socket.emit(\"chatnew\",messageObject)\n    \n\n    this.setState({\n        messageList: [...this.state.messageList, message]});\n  }\n\n  _onFilesSelected(fileList) {\n    const objectURL = window.URL.createObjectURL(fileList[0]);\n    const socket = io(\"http://localhost:5000\", {\n        withCredentials: true,\n        extraHeaders: {\n          \"my-custom-header\": \"abcd\"\n        }\n      });\n\n      var uploader = new SocketIOFileUpload(socket);\n      let messageObject = {\n          token: this.state.enteredtok,\n          chatId: this.state.enteredid,\n          message:fileList[0],\n          messageType:'file',\n          filename: fileList[0].name\n\n      }\n      uploader.listenOnInput(document.getElementsByName(\"files[]\")[0]);\n\n      socket.emit(\"chatnew\",messageObject)\n      \n    this.setState({\n      messageList: [...this.state.messageList, {\n        type: 'file', author: 'me',\n        data: {\n          url: objectURL,\n          fileName: fileList[0].name\n        }\n      }]\n    });\n  }\n\n  _sendMessage(text) {\n    if (text.length > 0) {\n        \n\n      this.setState({\n        messageList: [...this.state.messageList, {\n          author: this.state.enteredtok,\n          type: 'text',\n          data:text,\n        }]\n      })\n    }\n  }\n\n  render() {\n    return (<div>\n      <Launcher\n        agentProfile={{\n          teamName: 'react-chat-window',\n          imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\n        }}\n        onMessageWasSent={this._onMessageWasSent.bind(this)}\n        onFilesSelected={this._onFilesSelected.bind(this)}\n        messageList={this.state.messageList}\n      />\n    </div>)\n  }\n}\nexport default Demo;"]},"metadata":{},"sourceType":"module"}